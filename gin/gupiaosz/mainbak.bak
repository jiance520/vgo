package main

import (
	"io/ioutil"
	"net/http"
	"net/url"
	"fmt"
	"encoding/json"
)

//基于GO的股票行情查询api调用代码实例
//代码描述：基于GO的股票行情查询api调用代码实例 代码平台：聚合数据
//---------------------------------- // 股票查询调用示例代码 － 聚合数据
// 在线接口文档：http://www.juhe.cn/docs/81 //----------------------------------

const APPKEY = "db21317cca0c494f83fa3110d8f269fe" //您申请的APPKEY


//1.股票查询
func Request1() {
	//请求地址,沪深请求示例：http://web.juhe.cn:8080/finance/stock/hs?gid=sh601009&key=您申请的APPKEY
	//深A请求示例：         http://web.juhe.cn:8080/finance/stock/szall/gid=a&type=1&key=db21317cca0c494f83fa3110d8f269fe
	//juheURL := "http://op.juhe.cn/onebox/stock/query"
	juheURL := "http://web.juhe.cn:8080/finance/stock/szall/gid=a&type=1&key=db21317cca0c494f83fa3110d8f269fe"

	//初始化参数
	param := url.Values{}

	//配置请求参数,方法内部已处理urlencode问题,中文参数可以直接传参
	//param.Set("key", APPKEY) //应用APPKEY(应用详细页查询)，
	//param.Set("dtype", "") //返回数据的格式,xml或json，默认json
	//param.Set("stock", "深南电A") //股票名称

	//发送请求
	data, err := Get(juheURL, param)
	if err != nil {
		fmt.Errorf("请求失败,错误信息:\r\n%v", err)
	} else {
		var netReturn map[string]interface{}
		json.Unmarshal(data, &netReturn)
		if netReturn["error_code"].(float64) == 0 {
			fmt.Printf("接口返回result字段是:\r\n%v", netReturn["result"])
		}
	}
}

// get 网络请求
func Get(apiURL string, params url.Values) (rs []byte, err error) {
	var Url *url.URL
	Url, err = url.Parse(apiURL)
	if err != nil {
		fmt.Printf("解析url错误:\r\n%v", err)
		return nil, err
	}
	//如果参数中有中文参数,这个方法会进行URLEncode     Url.RawQuery=params.Encode()
	resp, err := http.Get(Url.String())
	if err != nil {
		fmt.Println("err:", err)
		return nil, err
	}
	defer resp.Body.Close()
	return ioutil.ReadAll(resp.Body)
}

// post 网络请求 ,params 是url.Values类型
func Post(apiURL string, params url.Values) (rs []byte, err error) {
	resp, err := http.PostForm(apiURL, params)
	if err != nil {
		return nil, err
	}
	defer resp.Body.Close()
	return ioutil.ReadAll(resp.Body)
}
